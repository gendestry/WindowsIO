/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class WindowsIO */

#ifndef _Included_WindowsIO
#define _Included_WindowsIO
#ifdef __cplusplus
extern "C" {
#endif
#undef WindowsIO_VK_ENTER
#define WindowsIO_VK_ENTER 13L
#undef WindowsIO_VK_ALT
#define WindowsIO_VK_ALT 18L
#undef WindowsIO_VK_CAPSLOCK
#define WindowsIO_VK_CAPSLOCK 20L
#undef WindowsIO_VK_PRINTSCR
#define WindowsIO_VK_PRINTSCR 44L
#undef WindowsIO_VK_LSHIFT
#define WindowsIO_VK_LSHIFT 160L
#undef WindowsIO_VK_LCTRL
#define WindowsIO_VK_LCTRL 162L
#undef WindowsIO_VK_LWIN
#define WindowsIO_VK_LWIN 91L
#undef WindowsIO_VK_SLEEP
#define WindowsIO_VK_SLEEP 95L
#undef WindowsIO_VK_NUMLOCK
#define WindowsIO_VK_NUMLOCK 144L
#undef WindowsIO_VMK_LEFT
#define WindowsIO_VMK_LEFT 2L
#undef WindowsIO_VMK_RIGHT
#define WindowsIO_VMK_RIGHT 8L
#undef WindowsIO_VMK_MIDDLE
#define WindowsIO_VMK_MIDDLE 32L
/*
 * Class:     WindowsIO
 * Method:    getScreenSizeX
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_WindowsIO_getScreenSizeX
  (JNIEnv *, jobject);

/*
 * Class:     WindowsIO
 * Method:    getScreenSizeY
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_WindowsIO_getScreenSizeY
  (JNIEnv *, jobject);

/*
 * Class:     WindowsIO
 * Method:    getVirtualScreenSizeX
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_WindowsIO_getVirtualScreenSizeX
  (JNIEnv *, jobject);

/*
 * Class:     WindowsIO
 * Method:    getVirtualScreenSizeY
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_WindowsIO_getVirtualScreenSizeY
  (JNIEnv *, jobject);

/*
 * Class:     WindowsIO
 * Method:    getForegroundWindowMetrics
 * Signature: ()Ljava/awt/Rectangle;
 */
JNIEXPORT jobject JNICALL Java_WindowsIO_getForegroundWindowMetrics
  (JNIEnv *, jobject);

/*
 * Class:     WindowsIO
 * Method:    keyPress
 * Signature: (C)V
 */
JNIEXPORT void JNICALL Java_WindowsIO_keyPress
  (JNIEnv *, jobject, jchar);

/*
 * Class:     WindowsIO
 * Method:    keyRelease
 * Signature: (C)V
 */
JNIEXPORT void JNICALL Java_WindowsIO_keyRelease
  (JNIEnv *, jobject, jchar);

/*
 * Class:     WindowsIO
 * Method:    typeChar
 * Signature: (C)V
 */
JNIEXPORT void JNICALL Java_WindowsIO_typeChar
  (JNIEnv *, jobject, jchar);

/*
 * Class:     WindowsIO
 * Method:    typeString
 * Signature: (Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_WindowsIO_typeString
  (JNIEnv *, jobject, jstring);

/*
 * Class:     WindowsIO
 * Method:    mousePress
 * Signature: (C)V
 */
JNIEXPORT void JNICALL Java_WindowsIO_mousePress
  (JNIEnv *, jobject, jchar);

/*
 * Class:     WindowsIO
 * Method:    mouseRelease
 * Signature: (C)V
 */
JNIEXPORT void JNICALL Java_WindowsIO_mouseRelease
  (JNIEnv *, jobject, jchar);

/*
 * Class:     WindowsIO
 * Method:    mouseScroll
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_WindowsIO_mouseScroll
  (JNIEnv *, jobject, jint);

/*
 * Class:     WindowsIO
 * Method:    getMouseX
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_WindowsIO_getMouseX
  (JNIEnv *, jobject);

/*
 * Class:     WindowsIO
 * Method:    getMouseY
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_WindowsIO_getMouseY
  (JNIEnv *, jobject);

/*
 * Class:     WindowsIO
 * Method:    mouseMove
 * Signature: (II)V
 */
JNIEXPORT void JNICALL Java_WindowsIO_mouseMove
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     WindowsIO
 * Method:    mouseMoveVirtual
 * Signature: (II)V
 */
JNIEXPORT void JNICALL Java_WindowsIO_mouseMoveVirtual
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     WindowsIO
 * Method:    mouseMoveRelative
 * Signature: (II)V
 */
JNIEXPORT void JNICALL Java_WindowsIO_mouseMoveRelative
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     WindowsIO
 * Method:    getPixel
 * Signature: (II)Ljava/awt/Color;
 */
JNIEXPORT jobject JNICALL Java_WindowsIO_getPixel
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     WindowsIO
 * Method:    getScreenshot
 * Signature: (IIII)[B
 */
JNIEXPORT jbyteArray JNICALL Java_WindowsIO_getScreenshot
  (JNIEnv *, jobject, jint, jint, jint, jint);

/*
 * Class:     WindowsIO
 * Method:    getClipboardText
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_WindowsIO_getClipboardText
  (JNIEnv *, jobject);

/*
 * Class:     WindowsIO
 * Method:    setClipboardText
 * Signature: (Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_WindowsIO_setClipboardText
  (JNIEnv *, jobject, jstring);

#ifdef __cplusplus
}
#endif
#endif
